def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 27

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.kubeapp.flutterkube"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

ext {
    supportLibraryVersion = "27.1.1"
    exoplayerVersion = "2.7.3"
}

dependencies {

    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
//    implementation "com.android.support:preference-v7:$supportLibraryVersion"
//    implementation "com.android.support:support-media-compat:$supportLibraryVersion"

//    //KKBOX open api
//    implementation 'com.google.code.gson:gson:2.8.2'
//    implementation project(':kkbox_open_api')
//
//    // YouTube Player
//    implementation 'com.github.HaarigerHarald:android-youtubeExtractor:master-SNAPSHOT'
//    implementation "com.google.android.exoplayer:exoplayer:$exoplayerVersion"
//    implementation "com.google.android.exoplayer:extension-mediasession:$exoplayerVersion"
//
//    // Spotify Player
//    implementation 'com.spotify.android:auth:1.1.0'
//    implementation 'com.spotify.sdk:spotify-player-24-noconnect-2.20b@aar'
//
    // Image Loader
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    kapt 'com.github.bumptech.glide:compiler:4.6.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
